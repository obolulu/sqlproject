/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import dao.ExpansionDAO;
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

import dao.RegionDAO;
import model.Expansion;

/**
 *
 * @author esena
 */
public class ExpansionsFrame extends javax.swing.JFrame {
    private ExpansionDAO expansionDAO;
        private static final DateTimeFormatter DATE_FORMATTER
                = DateTimeFormatter.ofPattern("yyyy-MM-dd");
    /**
     * Creates new form ExpansionsFrame
     */
    public ExpansionsFrame() {
        initComponents();
        expansionDAO = new ExpansionDAO();
        loadExpansionsTable();
        jTableExpansions.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
                    @Override
                    public void valueChanged(ListSelectionEvent e) {
                        if (!e.getValueIsAdjusting() && jTableExpansions.getSelectedRow() != -1) {
                            displaySelectedExpansion();
                        } else if (jTableExpansions.getSelectedRow() == -1) {
                            clearForm();
                            //jButtonUpdate.setEnabled(false);
                            //jButtonDelete.setEnabled(false);
                        }
                    }
                });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ExpansionDetails = new javax.swing.JPanel();
        jLabelID = new javax.swing.JLabel();
        jTextFieldID = new javax.swing.JTextField();
        jLabelName = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jLabelReleaseDate = new javax.swing.JLabel();
        jTextFieldReleaseDate = new javax.swing.JTextField();
        Buttons = new javax.swing.JPanel();
        jButtonShowCards = new javax.swing.JButton();
        jButtonAddExpansion = new javax.swing.JButton();
        jButtonUpdateExpansion = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        ExpansionsLayout = new javax.swing.JPanel();
        jScrollPaneExpansions = new javax.swing.JScrollPane();
        jTableExpansions = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ExpansionDetails.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabelID.setText("ID");

        jTextFieldID.setEditable(false);
        jTextFieldID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIDActionPerformed(evt);
            }
        });

        jLabelName.setText("Name");

        jTextFieldName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNameActionPerformed(evt);
            }
        });

        jLabelReleaseDate.setText("Release Date");

        jTextFieldReleaseDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldReleaseDateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ExpansionDetailsLayout = new javax.swing.GroupLayout(ExpansionDetails);
        ExpansionDetails.setLayout(ExpansionDetailsLayout);
        ExpansionDetailsLayout.setHorizontalGroup(
            ExpansionDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ExpansionDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ExpansionDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(ExpansionDetailsLayout.createSequentialGroup()
                        .addComponent(jTextFieldName)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(ExpansionDetailsLayout.createSequentialGroup()
                        .addGroup(ExpansionDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelID)
                            .addComponent(jLabelName)
                            .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ExpansionDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldReleaseDate, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ExpansionDetailsLayout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jLabelReleaseDate)))
                        .addContainerGap(208, Short.MAX_VALUE))))
        );
        ExpansionDetailsLayout.setVerticalGroup(
            ExpansionDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ExpansionDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ExpansionDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ExpansionDetailsLayout.createSequentialGroup()
                        .addGroup(ExpansionDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelID)
                            .addComponent(jLabelReleaseDate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ExpansionDetailsLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jTextFieldReleaseDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabelName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        Buttons.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButtonShowCards.setText("Show Cards");
        jButtonShowCards.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShowCardsActionPerformed(evt);
            }
        });

        jButtonAddExpansion.setText("Add Expansion");
        jButtonAddExpansion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddExpansionActionPerformed(evt);
            }
        });

        jButtonUpdateExpansion.setText("Update Expansion");
        jButtonUpdateExpansion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateExpansionActionPerformed(evt);
            }
        });

        jButton1.setText("Delete Expansion");

        javax.swing.GroupLayout ButtonsLayout = new javax.swing.GroupLayout(Buttons);
        Buttons.setLayout(ButtonsLayout);
        ButtonsLayout.setHorizontalGroup(
            ButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ButtonsLayout.createSequentialGroup()
                .addGroup(ButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ButtonsLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButtonAddExpansion)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonUpdateExpansion)
                        .addGap(12, 12, 12)
                        .addComponent(jButton1))
                    .addGroup(ButtonsLayout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(jButtonShowCards)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        ButtonsLayout.setVerticalGroup(
            ButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ButtonsLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(ButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAddExpansion)
                    .addComponent(jButtonUpdateExpansion)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(jButtonShowCards)
                .addContainerGap())
        );

        jTableExpansions.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTableExpansions.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPaneExpansions.setViewportView(jTableExpansions);

        javax.swing.GroupLayout ExpansionsLayoutLayout = new javax.swing.GroupLayout(ExpansionsLayout);
        ExpansionsLayout.setLayout(ExpansionsLayoutLayout);
        ExpansionsLayoutLayout.setHorizontalGroup(
            ExpansionsLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(ExpansionsLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(ExpansionsLayoutLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPaneExpansions, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        ExpansionsLayoutLayout.setVerticalGroup(
            ExpansionsLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 402, Short.MAX_VALUE)
            .addGroup(ExpansionsLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(ExpansionsLayoutLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPaneExpansions, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ExpansionsLayout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Buttons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(ExpansionDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(ExpansionDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(Buttons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ExpansionsLayout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void jButtonAddExpansionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddExpansionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonAddExpansionActionPerformed

    private void jButtonUpdateExpansionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateExpansionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonUpdateExpansionActionPerformed

    private void jTextFieldIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIDActionPerformed

    private void jTextFieldNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNameActionPerformed

    private void jTextFieldReleaseDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldReleaseDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldReleaseDateActionPerformed

    private void jButtonShowCardsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShowCardsActionPerformed
         if (jTextFieldID.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please select an expansion first.", "Selection Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int expansionId = Integer.parseInt(jTextFieldID.getText());
        String expansionName = jTextFieldName.getText();

        CardsByExpansionFrame cardsFrame = new CardsByExpansionFrame(expansionId, expansionName);
        cardsFrame.setVisible(true);
    }//GEN-LAST:event_jButtonShowCardsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExpansionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExpansionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExpansionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExpansionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExpansionsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Buttons;
    private javax.swing.JPanel ExpansionDetails;
    private javax.swing.JPanel ExpansionsLayout;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAddExpansion;
    private javax.swing.JButton jButtonShowCards;
    private javax.swing.JButton jButtonUpdateExpansion;
    private javax.swing.JLabel jLabelID;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelReleaseDate;
    private javax.swing.JScrollPane jScrollPaneExpansions;
    private javax.swing.JTable jTableExpansions;
    private javax.swing.JTextField jTextFieldID;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldReleaseDate;
    // End of variables declaration//GEN-END:variables

    private void loadExpansionsTable() {
        DefaultTableModel model = (DefaultTableModel) jTableExpansions.getModel();
        model.setRowCount(0);
        if (model.getColumnCount() == 0) {
            model.setColumnIdentifiers(new Object[]{"ID", "Name", "Release Date"});
        }
        List<Expansion> expansions = expansionDAO.getAllExpansions();
        for (Expansion exp : expansions) {
            model.addRow(new Object[]{
                exp.getExpansionId(),
                exp.getName(),
                exp.getReleaseDate() != null ? exp.getReleaseDate().format(DATE_FORMATTER) : ""
            });
        }
    }
    
    private void clearForm() {
        jTextFieldID.setText("");
        jTextFieldName.setText("");
        jTextFieldReleaseDate.setText("");
        jTableExpansions.clearSelection();
    }
    
    private void displaySelectedExpansion() {
        int selectedRow = jTableExpansions.getSelectedRow();
        if (selectedRow == -1) return;

        int expansionId = (Integer) jTableExpansions.getValueAt(selectedRow, 0);
        Expansion expansion = expansionDAO.getExpansionById(expansionId);

        if (expansion != null) {
            jTextFieldID.setText(String.valueOf(expansion.getExpansionId()));
            jTextFieldName.setText(expansion.getName());
            jTextFieldReleaseDate.setText(expansion.getReleaseDate() != null ? expansion.getReleaseDate().format(DATE_FORMATTER) : "");
            //setCrudButtonsEnabled(true);
            jButtonShowCards.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(this, "Error: Expansion not found.", "Error", JOptionPane.ERROR_MESSAGE);
            clearForm();
        }
    }
}
